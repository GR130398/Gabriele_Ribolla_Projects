ROBOTICS PROJECT 2
- Team
    10617369, Gabriele Ribolla

- Description of the project
    * Launch:
      + amcl.launch.xml
        contains the parameters to tune the amcl node
      + gmapping.launch.xml
        contains the parameters to tune the gmapping node
      + localizationAndAmcl.launch
        is used to launch the localization and amcl nodes and rviz other nodes used to perform
        the amcl task.
      + mapping.launch
        is used launch the gmapping node and rviz for the mapping
      + hector_trajectory_server.launch.xml
        contains the parameters to tune the hector_trajectory_server node
      + laserscan_multi_merger.launch
        is used to launch the laserscan_multi_merger node related to ira tool (only that node)
      + ira_laser_tools.launch.xml
        contains the parameters related the ira_laser_tools node to merge the /front/scan and /rear/scan in one topic /scan
      + static_tf.launch.xml
        contains all the static transfer function used in the project

    * maps: contains the .pgm and .yaml files generated by gmapping and used for the localization

    * rviz: contains the rviz configuration files for the mapping and the localization visualizations on rviz

    * src:
        + image_ps.cpp
            cpp file for the node that publish the /image_topic and subscribe to the /amcl_pose, in order to edit the mymap.png
            image drawing the /amcl_pose trajectory.
        + path.cpp
            cpp file for the node that subcribes to /amcl_pose and publish the path of it, to see it on rviz
        + picture_server.cpp
            cpp file for the service that saves the image with the map and the trajectory
        + tf_odometry.cpp
            cpp file for the node that subscribes to /odom and publishes the transfer function between odom and base_footprint

- useful commands
    + to save the image
        $ rosservice call save_image 1 path name_of_image
        example $ rosservice call /save_image 1 /home/gr130398/robotics/images/ c18
	1 = save the image
	0 = service called but the image not saved

    + to install hector_trajectory_server
        $ sudo apt install ros-melodic-hector-trajectory-server

- TF structure
    <!-- set the static tf between lasers and the base_link-->
        <node pkg="tf2_ros" type="static_transform_publisher" name="tf_rear_laser_bl" args="-0.35 0.0 0.0 0.0 0.0 0.866 0.5 base_link laser_rear"/>
        <node pkg="tf2_ros" type="static_transform_publisher" name="tf_front_laser_bl" args="0.35 0.0 0.0 0.0 0.0 0.5150381 0.8571673 base_link laser_front"/>
        <node pkg="tf2_ros" type="static_transform_publisher" name="tf_base_footprint_bl" args="0.0 0.0 0.0 0.0 0.0 0.0  base_footprint base_link"/>


    Due to the complexity the tfs are shown in the frames.pdf file, output of the rqt_tf_tree node. These are the tf given
    by the bags and the one created by the nodes used for amcl.


- Bags used
    We used the robotics1_final.bag  for the mapping and the robotics2_final.bagfile for the localization.
    The robotics3_final.bag file was used for testing.


- Launch instructions
    To start the mapping we only need to launch the mapping.launch file and every node will start and rviz will open. To do so use:
        $ roslaunch project_2 mapping.launch
    To start the amcl we only need to launch the localizationAndAmcl.launch file and every node will start and rviz will open. To do so use:
        $ roslaunch project_2 localizationAndAmcl.launch

- Info
    General:
        + We use also the node given by hector_trajectory_server to compare the path between the base_footprint and the
        path given by the /amcl_pose using the path node
        + when the service /save_image is called in the terminal you might read after the call
        "ERROR: service [/save_image] responded with an error:"
        to understand what happens you have to look at the terminal in which the "localizationAndAmcl.launch" is working.
        The previous sentence there is also when the image is saved, because in the launch's terminal is printed
        for example "Image saved in '/home/gr130398/robotics/images/c21.png'" even if it is not an error.
        + /path -> topic related to the amcl_pose path
        * /trajectory --> topic related to the base_footprint path

    Calibration:
        + ira_laser_tools
          we use the rqt_reconfigure node to modify the values of its parameters to launch it
          $ rosrun rqt_reconfigure rqt_reconfigure
          and select the configuration for the ira_laser_tools node
